# Generated by Django 5.2 on 2025-04-25 13:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('configuracion', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductoTerminado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, help_text='Código único del producto terminado.', max_length=40, unique=True, verbose_name='Código Producto')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre Producto')),
                ('comercializable', models.BooleanField(default=False, verbose_name='¿Es Comercializable?')),
                ('medida_en', models.CharField(choices=[('m', 'Metros'), ('cm', 'Centímetros'), ('mm', 'Milímetros'), ('pul', 'Pulgadas')], default='mm', max_length=3, verbose_name='Unidad Dimensiones')),
                ('calibre_um', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Calibre (µm)')),
                ('largo', models.DecimalField(decimal_places=2, help_text="Medido en la unidad seleccionada en 'Unidad Dimensiones'", max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Largo')),
                ('ancho', models.DecimalField(decimal_places=2, help_text="Medido en la unidad seleccionada en 'Unidad Dimensiones'", max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Ancho')),
                ('factor_decimal', models.DecimalField(decimal_places=2, default=1.0, help_text='Factor multiplicador (propósito a definir)', max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Factor Decimal')),
                ('ancho_rollo', models.DecimalField(blank=True, decimal_places=2, help_text='Ancho del rollo de material base', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Ancho Rollo (mm?)')),
                ('metros_lineales', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Metros Lineales')),
                ('extrusion_doble', models.BooleanField(default=False, verbose_name='¿Extrusión Doble?')),
                ('cantidad_xml', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Cantidad XML')),
                ('largo_material', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Largo Material por Unidad')),
                ('pistas', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Pistas Producción Estándar')),
                ('color', models.CharField(blank=True, max_length=40, verbose_name='Color Principal')),
                ('sellado_peso_millar', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Peso Millar (Kg)')),
                ('sellado_fuelle_lateral', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Fuelle Lateral (mm)')),
                ('sellado_fuelle_superior', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Fuelle Superior (mm)')),
                ('sellado_fuelle_fondo', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Fuelle Fondo (mm)')),
                ('sellado_solapa_cm', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Solapa (cm)')),
                ('sellado_troquel_medida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Medida Troquel (mm?)')),
                ('sellado_zipper_medida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Medida Zipper (mm?)')),
                ('sellado_valvula_medida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Medida Válvula (mm?)')),
                ('sellado_ultrasonido', models.BooleanField(default=False, verbose_name='Sellado: ¿Usa Ultrasonido?')),
                ('sellado_ultrasonido_pos', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Posición Ultrasonido (mm)')),
                ('sellado_precorte', models.BooleanField(default=False, verbose_name='Sellado: ¿Lleva Precorte?')),
                ('sellado_precorte_medida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sellado: Medida Precorte (mm?)')),
                ('imp_repeticiones', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Impresión: Repeticiones Estándar')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('actualizado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos_actualizados', to=settings.AUTH_USER_MODEL)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configuracion.categoriaproducto', verbose_name='Categoría')),
                ('creado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos_creados', to=settings.AUTH_USER_MODEL)),
                ('cuenta_contable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.cuentacontable', verbose_name='Cuenta Contable')),
                ('estado', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='configuracion.estadoproducto', verbose_name='Estado')),
                ('imp_rodillo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.rodilloanilox', verbose_name='Impresión: Rodillo/Anilox Estándar')),
                ('imp_tipo_impresion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tipoimpresion', verbose_name='Impresión: Tipo Estándar')),
                ('lamina', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.lamina', verbose_name='Lámina Asociada')),
                ('programa_lamina', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.programalamina', verbose_name='Programa Lámina')),
                ('sellado_tipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tiposellado', verbose_name='Sellado: Tipo')),
                ('sellado_troquel_tipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tipotroquel', verbose_name='Sellado: Tipo Troquel')),
                ('sellado_valvula_tipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tipovalvula', verbose_name='Sellado: Tipo Válvula')),
                ('sellado_zipper_tipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tipozipper', verbose_name='Sellado: Tipo Zipper')),
                ('servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.servicio', verbose_name='Servicio Asociado')),
                ('subcategoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.subcategoriaproducto', verbose_name='Subcategoría')),
                ('tipo_materia_prima', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configuracion.tipomateriaprima', verbose_name='Tipo Materia Prima Base')),
                ('tipo_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configuracion.tipomaterial', verbose_name='Tipo Material Específico')),
                ('tipo_tinta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tipotinta', verbose_name='Tipo de Tinta Estándar')),
                ('tratamiento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.tratamiento', verbose_name='Tratamiento Superficie')),
                ('unidad_medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configuracion.unidadmedida', verbose_name='Unidad de Medida Principal')),
            ],
            options={
                'verbose_name': 'Producto Terminado',
                'verbose_name_plural': 'Productos Terminados',
                'ordering': ['codigo'],
            },
        ),
    ]
