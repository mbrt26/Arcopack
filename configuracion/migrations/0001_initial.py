# Generated by Django 5.2 on 2025-04-25 13:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Categoría de Producto',
                'verbose_name_plural': 'Categorías de Productos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='CausaParo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código Causa')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripción Causa')),
                ('tipo', models.CharField(choices=[('MECANICO', 'Mecánico'), ('ELECTRICO', 'Eléctrico'), ('OPERATIVO', 'Operativo/Proceso'), ('MATERIAL', 'Falta/Defecto Material'), ('HERRAMIENTA', 'Herramental/Montaje'), ('PROGRAMADO', 'Paro Programado'), ('CALIDAD', 'Problema de Calidad'), ('SEGURIDAD', 'Seguridad'), ('EXTERNO', 'Externo'), ('OTROS', 'Otros')], max_length=20, verbose_name='Tipo de Causa')),
                ('aplica_a', models.CharField(blank=True, help_text='Opcional: Tipos de máquina donde aplica (ej: IMPRESORA, SELLADORA)', max_length=200)),
                ('requiere_observacion', models.BooleanField(default=False, verbose_name='¿Requiere Observación Obligatoria?')),
            ],
            options={
                'verbose_name': 'Causa de Paro',
                'verbose_name_plural': 'Causas de Paro',
                'ordering': ['tipo', 'codigo'],
            },
        ),
        migrations.CreateModel(
            name='CuentaContable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código Cuenta')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre Cuenta')),
                ('naturaleza', models.CharField(blank=True, choices=[('DEBITO', 'Débito'), ('CREDITO', 'Crédito')], max_length=10)),
            ],
            options={
                'verbose_name': 'Cuenta Contable',
                'verbose_name_plural': 'Cuentas Contables',
            },
        ),
        migrations.CreateModel(
            name='EstadoProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del estado del producto (ej: Activo, Obsoleto, En Desarrollo).', max_length=50, unique=True, verbose_name='Nombre Estado')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción opcional del estado.', verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Estado de Producto',
                'verbose_name_plural': 'Estados de Producto',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Lamina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Lámina',
                'verbose_name_plural': 'Tipos de Lámina',
            },
        ),
        migrations.CreateModel(
            name='Maquina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código Máquina')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre Máquina')),
                ('tipo', models.CharField(choices=[('IMPRESORA', 'Impresora'), ('REFILADORA', 'Refiladora'), ('SELLADORA', 'Selladora'), ('DOBLADORA', 'Dobladora'), ('LAMINADORA', 'Laminadora'), ('EXTRUSORA', 'Extrusora'), ('OTRO', 'Otro')], max_length=20, verbose_name='Tipo')),
                ('marca', models.CharField(blank=True, max_length=100)),
                ('modelo', models.CharField(blank=True, max_length=100)),
                ('ubicacion_planta', models.CharField(blank=True, max_length=100, verbose_name='Ubicación en Planta')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
            ],
            options={
                'verbose_name': 'Máquina',
                'verbose_name_plural': 'Máquinas',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Proceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('orden_flujo', models.PositiveIntegerField(default=0, help_text='Orden en el flujo productivo estándar')),
            ],
            options={
                'verbose_name': 'Proceso Productivo',
                'verbose_name_plural': 'Procesos Productivos',
                'ordering': ['orden_flujo', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaLamina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Programa')),
            ],
            options={
                'verbose_name': 'Programa de Lámina',
                'verbose_name_plural': 'Programas de Lámina',
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nit', models.CharField(max_length=20, unique=True, verbose_name='NIT/RUT')),
                ('razon_social', models.CharField(max_length=255, verbose_name='Razón Social')),
                ('nombre_comercial', models.CharField(blank=True, max_length=255, verbose_name='Nombre Comercial')),
                ('direccion', models.CharField(blank=True, max_length=255)),
                ('ciudad', models.CharField(blank=True, max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contacto_principal', models.CharField(blank=True, max_length=150)),
                ('dias_credito', models.PositiveIntegerField(default=0, verbose_name='Días de Crédito')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['razon_social'],
            },
        ),
        migrations.CreateModel(
            name='RodilloAnilox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=100, unique=True, verbose_name='Código Anilox')),
                ('lineatura', models.PositiveIntegerField(blank=True, null=True, verbose_name='Lineatura (LPI)')),
                ('volumen', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Volumen (BCM)')),
                ('descripcion', models.CharField(blank=True, max_length=200)),
                ('estado', models.CharField(blank=True, help_text='Ej: Bueno, Regular, Dañado', max_length=50)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Rodillo Anilox',
                'verbose_name_plural': 'Rodillos Anilox',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True, verbose_name='Nombre Servicio')),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
            },
        ),
        migrations.CreateModel(
            name='TipoDesperdicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código Desperdicio')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripción Desperdicio')),
                ('es_recuperable', models.BooleanField(default=False, verbose_name='¿Es Recuperable?')),
            ],
            options={
                'verbose_name': 'Tipo de Desperdicio',
                'verbose_name_plural': 'Tipos de Desperdicio',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='TipoImpresion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tipo Impresión')),
            ],
            options={
                'verbose_name': 'Tipo de Impresión',
                'verbose_name_plural': 'Tipos de Impresión',
            },
        ),
        migrations.CreateModel(
            name='TipoMateriaPrima',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo Materia Prima Base',
                'verbose_name_plural': 'Tipos Materia Prima Base',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoSellado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tipo Sellado')),
            ],
            options={
                'verbose_name': 'Tipo de Sellado',
                'verbose_name_plural': 'Tipos de Sellado',
            },
        ),
        migrations.CreateModel(
            name='TipoTinta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tipo Tinta')),
            ],
            options={
                'verbose_name': 'Tipo de Tinta',
                'verbose_name_plural': 'Tipos de Tinta',
            },
        ),
        migrations.CreateModel(
            name='TipoTroquel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tipo Troquel')),
            ],
            options={
                'verbose_name': 'Tipo de Troquel',
                'verbose_name_plural': 'Tipos de Troquel',
            },
        ),
        migrations.CreateModel(
            name='TipoValvula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tipo Válvula')),
            ],
            options={
                'verbose_name': 'Tipo de Válvula',
                'verbose_name_plural': 'Tipos de Válvula',
            },
        ),
        migrations.CreateModel(
            name='TipoZipper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tipo Zipper')),
            ],
            options={
                'verbose_name': 'Tipo de Zipper',
                'verbose_name_plural': 'Tipos de Zipper',
            },
        ),
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre Tratamiento')),
            ],
            options={
                'verbose_name': 'Tratamiento Superficie',
                'verbose_name_plural': 'Tratamientos Superficie',
            },
        ),
        migrations.CreateModel(
            name='UnidadMedida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código corto para la unidad (ej: Kg, m, Unid).', max_length=10, unique=True, verbose_name='Código Unidad')),
                ('nombre', models.CharField(help_text='Nombre descriptivo de la unidad de medida.', max_length=50, verbose_name='Nombre Unidad')),
            ],
            options={
                'verbose_name': 'Unidad de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('tipo_base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='configuracion.tipomateriaprima', verbose_name='Tipo Base')),
            ],
            options={
                'verbose_name': 'Tipo de Material Específico',
                'verbose_name_plural': 'Tipos de Material Específico',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='SubcategoriaProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategorias', to='configuracion.categoriaproducto')),
            ],
            options={
                'verbose_name': 'Subcategoría de Producto',
                'verbose_name_plural': 'Subcategorías de Productos',
                'ordering': ['categoria__nombre', 'nombre'],
                'unique_together': {('categoria', 'nombre')},
            },
        ),
    ]
